{"version":3,"file":"static/js/562.af733768.chunk.js","mappings":"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","sources":["components/forms/AuthForms.styled.js","pages/authLayout/AuthLayout.styled.js","components/forms/loginForm/LoginForm.jsx","pages/loginPage/LoginPage.styled.js","pages/loginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field, Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    flex-direction: column;\n    align-items: center;\n    width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n    background-color: ${p => p.theme.colors.lightBackgroundColor};\n    border-radius: ${p => p.theme.radii.form};\n\n        @media screen and (min-width: 768px) {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            z-index: 1;\n            width: 540px;   \n            padding: 40px 65px 60px 65.5px;\n        }\n`;\n\nexport const FieldWrap = styled.div`\n    position: relative;\n    width: 100%;\n    margin-bottom: 40px;\n\n        &:nth-of-type(3){\n            margin-bottom: 10px;\n        }\n        &:last-of-type{\n            margin-bottom: 50px;\n        }\n        &:first-of-type{\n            margin-top: 50px;\n        }\n`;\n\nexport const IconWrap = styled.span`\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    left: 8px;\n    bottom: 10px;\n`;\n\nexport const StyledField = styled(Field)`\n    width: 100%;\n    height: 34px;\n    padding-left: 52px;\n    padding-bottom: 10px;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: ${p => p.theme.lineHeights.normal};\n\n    border: ${p => p.theme.borders.none};\n    border-bottom: 1px solid ${p => p.theme.colors.borderColor};\n`;\n\nexport const Svg = styled.svg`\n    width: 24px;\n    height: 24px;\n    margin-right: 20px;\n`;\n\nexport const EyeButton = styled.button`\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    background-color: transparent;\n    outline: none;\n    border: ${p => p.theme.borders.none};\n    width: 30px;\n`;\n\nexport const StyledErrorMessage = styled.div`\n    position: absolute;\n    bottom: -25px;\n    left: 50%;\n    transform: translateX(-50%);\n    color: ${p => p.theme.colors.expenseColor};\n`;\n\n","import styled from \"@emotion/styled/macro\";\nimport ellipseLeft from '../../images/ellipse-left.png';\nimport ellipseRight from '../../images/ellipse-right.png';\n\nexport const AuthContainer = styled.div`\n    width: 100%;\n    height: 100vh;\n    margin: 0 auto;\n    background-color: ${p => p.theme.colors.lightBackgroundColor};\n    \n        @media screen and (min-width: 320px) {\n            width: 320px;\n        }\n        @media screen and (min-width: 768px) {\n            position: relative;\n            width: 768px;\n            overflow: hidden;\n            background-color: ${p => p.theme.colors.backgroundColor};\n\n            &::before {\n                content: \"\";\n                position: absolute;\n                background-image: url(${ellipseLeft});\n                background-repeat: no-repeat;\n                background-position: bottom left;\n                bottom: 0;\n                left: 0;\n                width: 618px;\n                height: 547px;\n            }\n\n            &::after {\n                content: \"\";\n                position: absolute;\n                background-image: url(${ellipseRight});\n                background-repeat: no-repeat;\n                background-position: top right;\n                width: 618px;\n                height: 547px;\n                right: 0;\n                top: 0;\n                filter: blur(15px);\n                opacity: 0.6;\n            }\n        }\n        \n        @media screen and (min-width: 1280px) {\n            display: flex;  \n            width: 1280px;\n        }\n`;\n\nexport const RightBackground = styled.div`\n    @media screen and (min-width: 1280px) {\n        position: relative;\n        width: 720px;\n        height: 100%;\n        background-color: ${p => p.theme.colors.secondaryBackgroundColor};\n    }\n`;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Logo } from 'components/logo/Logo';\nimport { Button } from 'components/buttons/button/Button';\nimport Sprite from '../../../images/icons/symbol-defs.svg';\nimport { login } from 'redux/auth/auth-operations';\nimport { StyledNavButton } from 'components/buttons/button/Button.styled';\nimport { Loader } from 'components/loader/Loader';\nimport {\n    EyeButton,\n    FieldWrap,\n    IconWrap,\n    StyledErrorMessage,\n    StyledField,\n    StyledForm,\n    Svg\n} from '../AuthForms.styled';\n\nconst idPassword = nanoid();\nconst idEmail = nanoid();\n\nexport const LoginForm = () => {\n\n    const dispatch = useDispatch();\n    const [showPassword, setShowPassword] = useState(false);\n    \n    const validationSchema = Yup.object({\n        email: Yup.string().email('must be a valid email').required('Required'),\n        password: Yup.string().required('Required'),\n    });\n\n    const onSubmit = ({ email, password }, { resetForm }) => {\n        dispatch(login({ email, password }));\n        resetForm();\n    };\n\n    return (\n       <Formik\n          initialValues={{ email: '', password: ''}}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            <StyledForm autoComplete=\"off\" >\n                <Logo />\n                <FieldWrap>\n                    <StyledField label=\"Email\" name=\"email\" type=\"email\" id={idEmail} placeholder=\"E-mail\"/>\n                    <IconWrap>\n                        <Svg>\n                            <use href={`${Sprite}#icon-email`}></use>\n                        </Svg>\n                    </IconWrap>\n                    <StyledErrorMessage>\n                        <ErrorMessage name=\"email\"/>\n                    </StyledErrorMessage>\n                </FieldWrap>\n                \n                <FieldWrap>\n                    <StyledField label=\"Password\" name=\"password\" type={showPassword ? 'text' : 'password'} id={idPassword} placeholder=\"Password\"/>\n                    <IconWrap>\n                        <Svg>\n                            <use href={`${Sprite}#icon-lock`}></use>\n                        </Svg>\n                    </IconWrap>\n                    <EyeButton type=\"button\" onClick={() => setShowPassword(!showPassword)}>\n                        {!showPassword ? <AiOutlineEyeInvisible color='#BDBDBD'/>:<AiOutlineEye color='#BDBDBD'/>}\n                    </EyeButton>\n                    <StyledErrorMessage >\n                        <ErrorMessage name=\"password\"/>\n                    </StyledErrorMessage>\n                </FieldWrap> \n                <Button type=\"submit\">\n                    Log in\n                </Button>\n                <StyledNavButton to=\"/register\">\n                    Registration\n                </StyledNavButton>\n                <Loader />\n            </StyledForm> \n        </Formik>\n    )\n}","import styled from \"@emotion/styled\";\nimport loginImg from '../../images/login.png'\n\nexport const LeftBackground = styled.div`\n    @media screen and (min-width: 1280px) {\n    position: relative;\n    width: 560px;\n    height: 720px;\n   \n        &::after{\n            content: \"\";\n            position: absolute;\n            background-image: url(${loginImg});\n            background-repeat: no-repeat;\n            background-position: center;\n            width: 435px;\n            height: 420px;\n            left: 50%;\n            top: 70%;\n            transform: translate(-50%, -70%)\n        }\n    }\n`;","import { LoginForm } from \"components/forms/loginForm/LoginForm\";\nimport {RightBackground } from \"pages/authLayout/AuthLayout.styled\";\nimport { LeftBackground } from \"./LoginPage.styled\";\n\nconst LoginPage = () => {\n    return (\n        <>\n            <LeftBackground/>\n            <RightBackground>\n                <LoginForm/>\n            </RightBackground>\n        </>\n    )\n}\n\nexport default LoginPage;"],"names":["StyledForm","styled","Form","p","theme","colors","lightBackgroundColor","radii","form","FieldWrap","IconWrap","StyledField","Field","fontSizes","m","lineHeights","normal","borders","none","borderColor","Svg","EyeButton","StyledErrorMessage","expenseColor","AuthContainer","backgroundColor","ellipseLeft","ellipseRight","RightBackground","secondaryBackgroundColor","idPassword","nanoid","idEmail","LoginForm","dispatch","useDispatch","useState","showPassword","setShowPassword","validationSchema","Yup","email","required","password","initialValues","onSubmit","resetForm","login","autoComplete","Logo","label","name","type","id","placeholder","href","Sprite","onClick","color","Button","to","Loader","LeftBackground","loginImg"],"sourceRoot":""}