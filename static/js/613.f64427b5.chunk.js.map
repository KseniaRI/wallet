{"version":3,"file":"static/js/613.f64427b5.chunk.js","mappings":"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","sources":["components/Box.js","components/button/Button.jsx","components/button/Button.styled.js","components/registrationForm/RegistrationForm.styled.js","pages/authLayout/AuthLayout.styled.js","components/registrationForm/PasswordStrengthMeter.styled.js","components/registrationForm/PasswordStrengthMeter.jsx","components/registrationForm/RegistrationForm.jsx","pages/registrationPage/RegistrationPage.styled.js","pages/registrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n);","import { StyledButton } from \"./Button.styled\"\n\nexport const Button = ({ children }) => <StyledButton type=\"submit\">{children}</StyledButton>;\n    \n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledButton = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 300px;\nheight: 50px;\nborder: ${p => p.theme.borders.normal}; \nborder-color: ${p => p.theme.colors.accentColor};\nborder-radius: ${p => p.theme.radii.button};\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\ntext-transform: uppercase;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\ncolor: ${p => p.theme.colors.accentColor};\n\ntransition:  all 250ms cubic-bezier(0.4, 0, 0.2, 1);\nmargin-bottom: 20px;\n\n&:hover,\n&:focus{\n   background-color: ${p => p.theme.colors.incomeColor};\n   color: ${p => p.theme.colors.lightTxtColor}; \n   border: ${p => p.theme.borders.none}; \n}\n`;\n\nexport const StyledNavButton = styled(NavLink)`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 300px;\nheight: 50px;\nborder: ${p => p.theme.borders.normal}; \nborder-color: ${p => p.theme.colors.accentColor};\nborder-radius: ${p => p.theme.radii.button};\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\ntext-transform: uppercase;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\ncolor: ${p => p.theme.colors.accentColor};\n\ntransition:  all 250ms cubic-bezier(0.4, 0, 0.2, 1);\nmargin-bottom: 20px;\n\n&:hover,\n&:focus{\n   background-color: ${p => p.theme.colors.incomeColor};\n   color: ${p => p.theme.colors.lightTxtColor}; \n   border: ${p => p.theme.borders.none}; \n}\n`","import styled from \"@emotion/styled\";\nimport { Field, Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntop: 50%;\nleft: 50%;\npadding: 40px 65px 60px 65.5px;\ntransform: translate(-50%, -50%);\nz-index: 1;\nwidth: 540px;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\nborder-radius: ${p => p.theme.radii.form};\n`;\n\nexport const FieldWrap = styled.div`\nposition: relative;\nwidth: 100%;\nmargin-bottom: 40px;\n\n&:nth-of-type(3){\n    margin-bottom: 10px;\n}\n&:last-of-type{\n    margin-bottom: 50px;\n}\n&:first-of-type{\n    margin-top: 50px;\n}\n`;\n\nexport const IconWrap = styled.span`\nposition: absolute;\nwidth: 24px;\nheight: 24px;\nleft: 8px;\nbottom: 10px;\n`;\n\nexport const StyledField = styled(Field)`\nwidth: 100%;\nheight: 34px;\npadding-left: 52px;\npadding-bottom: 10px;\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\n\nborder: ${p => p.theme.borders.none};\nborder-bottom: 1px solid ${p => p.theme.colors.borderColor};\n`;\n\nexport const Svg = styled.svg`\nwidth: 24px;\nheight: 24px;\nmargin-right: 20px;\n`;\n\nexport const EyeButton = styled.button`\nposition: absolute;\nright: 0;\ntop: 50%;\ntransform: translateY(-50%);\nbackground-color: #fff;\noutline: none;\nborder: ${p => p.theme.borders.none};\nwidth: 30px;\n`;","import styled from \"@emotion/styled\";\nimport ellipseLeft from '../../images/ellipse-left.png';\nimport ellipseRight from '../../images/ellipse-right.png';\n\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    margin: 0 auto;\n    width: 1280px;\n    height: 720px;\n    overflow: hidden;\n    background-color: ${p => p.theme.colors.backgroundColor};\n\n    &::before {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseLeft});\n    background-repeat: no-repeat;\n    background-position: bottom left;\n    bottom: 0;\n    left: 0;\n    width: 618px;\n    height: 547px;\n    }\n\n    &::after {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseRight});\n    background-repeat: no-repeat;\n    background-position: top right;\n    width: 618px;\n    height: 547px;\n    right: 0;\n    top: 0;\n    filter: blur(15px);\n    opacity: 0.6;\n    }\n`;\n\nexport const RightBackground = styled.div`\n    position: relative;\n    width: 720px;\n    height: 720px;\n    background-color: ${p => p.theme.colors.secondaryBackgroundColor};\n`;","import styled from \"@emotion/styled\";\n\nexport const PasswordStrengthMeterWrap = styled.div`\ntext-align: left;\nmargin-bottom: 30px;\n`;\n\nexport const PasswordStrengthMeterProgress = styled.progress`\nappearance: none;\nwidth: 410px;\nheight: 6px;\n\n &::-webkit-progress-bar {\n    background-color: #E5F1EF;\n    border-radius: ${p =>p.theme.radii.button};\n}\n\n&::-webkit-progress-value{\n    border-radius: 2px;\n    background-size: 35px 20px, 100% 100%, 100% 100%;\n}\n    &.weak::-webkit-progress-value{\n        background-color: ${p =>p.theme.colors.expenseColor};\n    };\n    &.strong::-webkit-progress-value {\n        background-color: ${p =>p.theme.colors.incomeColor};\n    };\n    &.fair::-webkit-progress-value{\n        background-color: #FFE066;\n    };\n    &.good::-webkit-progress-value{\n         background-color: #247BA0;\n    };\n`;\n","import zxcvbn from 'zxcvbn';\nimport {PasswordStrengthMeterProgress, PasswordStrengthMeterWrap } from './PasswordStrengthMeter.styled';\n\nconst createPasswordLabel = (result) => {\n    switch (result.score) {\n      case 0:\n        return 'weak';\n      case 1:\n        return 'weak';\n      case 2:\n        return 'fair';\n      case 3:\n        return 'good';\n      case 4:\n        return 'strong';\n      default:\n        return 'weak';\n    }\n  }\n\nconst PasswordStrengthMeter = ({password}) => {\n    const testedResult = zxcvbn(password);\n    \n    return (\n        <PasswordStrengthMeterWrap>\n            <PasswordStrengthMeterProgress\n                className={createPasswordLabel(testedResult)}\n                value={testedResult.score}\n                max=\"4\"\n        />\n      </PasswordStrengthMeterWrap >\n      )\n};\n\nexport default PasswordStrengthMeter;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Logo } from 'components/logo/Logo';\nimport { EyeButton, FieldWrap, IconWrap, StyledField, StyledForm, Svg } from './RegistrationForm.styled';\nimport { Button } from 'components/button/Button';\nimport Sprite from '../../images/icons/symbol-defs.svg';\nimport { useDispatch} from 'react-redux';\nimport { signup } from 'redux/auth/auth-operations';\nimport { StyledNavButton } from 'components/button/Button.styled';\nimport { Loader } from 'components/loader/Loader';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport { Box } from 'components/Box';\nimport { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nconst idName = nanoid();\nconst idPassword = nanoid();\nconst idEmail = nanoid();\nconst idConfirmPassword = nanoid();\n\nexport const RegistrationForm = () => {\n    const dispatch = useDispatch();\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirm, setShowConfirm] = useState(false);\n\n    return (\n       <Formik\n          initialValues={{ email: '', password: '', name: '', confirm: '' }}\n         validationSchema={Yup.object({\n              name: Yup.string().required('Required'),\n              email: Yup.string().email('must be a valid email').required('Required'),\n              password: Yup.string().required('Required'),\n              confirm: Yup.string().oneOf([Yup.ref('password')]).required('Required')\n            })\n            }\n            onSubmit={({ name, email, password}, { resetForm}) => {\n                dispatch(signup({ name, email, password }));\n                resetForm();\n            }}\n        >\n            {({ values, errors, touched }) =>\n                <StyledForm autoComplete=\"off\" >\n                    <Logo />\n                    <FieldWrap>\n                        <StyledField label=\"Email\" name=\"email\" type=\"email\" id={idEmail} placeholder=\"E-mail\" />\n                        <IconWrap><Svg><use href={`${Sprite}#icon-email`}></use></Svg></IconWrap>\n                    </FieldWrap>\n                    <FieldWrap>\n                        <StyledField label=\"Password\" name=\"password\" type={showPassword ? 'text' : 'password'} id={idPassword} placeholder=\"Password\" />\n                        <IconWrap><Svg><use href={`${Sprite}#icon-lock`}></use></Svg></IconWrap>\n                        <EyeButton type=\"button\" onClick={() => setShowPassword(!showPassword)}>\n                            {!showPassword ? <AiOutlineEyeInvisible color='#BDBDBD'/>:<AiOutlineEye color='#BDBDBD'/>}\n                        </EyeButton>\n                    </FieldWrap>\n                    <FieldWrap>\n                        <StyledField label=\"Confirm-password\" name=\"confirm\" type={showConfirm ? 'text' : 'password'} id={idConfirmPassword} placeholder=\"Confirm password\" />\n                        <IconWrap><Svg><use href={`${Sprite}#icon-lock`}></use></Svg></IconWrap>\n                        <EyeButton type=\"button\" onClick={() => setShowConfirm(!showConfirm)}>\n                            {!showConfirm ? <AiOutlineEyeInvisible color='#BDBDBD'/>:<AiOutlineEye color='#BDBDBD'/>}\n                        </EyeButton>\n                    </FieldWrap>\n                    {errors.confirm && touched.confirm ? (\n                        <Box as=\"div\" color=\"expenseColor\">Fields do not match</Box>) : null}\n                    <PasswordStrengthMeter password={values.password} />\n                    <FieldWrap>\n                        <StyledField label=\"Name\" name=\"name\" type=\"text\" id={idName} placeholder=\"Your name\" />\n                        <IconWrap><Svg><use href={`${Sprite}#icon-user`}></use></Svg></IconWrap>\n                    </FieldWrap>\n                    <Button type=\"submit\">\n                        Registration\n                    </Button>\n                    <StyledNavButton to=\"/\" >\n                        Log in\n                    </StyledNavButton>\n                    <Loader />\n                </StyledForm>\n            }\n        </Formik>\n    )\n}","import styled from \"@emotion/styled\";\nimport registerImg from '../../images/register.png'\n\nexport const LeftBackground = styled.div`\n    position: relative;\n    width: 560px;\n    height: 720px;\n   \n    &::after{\n        content: \"\";\n        position: absolute;\n        background-image: url(${registerImg});\n        background-repeat: no-repeat;\n        background-position: center;\n        width: 410px;\n        height: 413px;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%)\n    }\n`;\n\n","import { RegistrationForm } from \"components/registrationForm/RegistrationForm\";\nimport { Container, RightBackground } from \"pages/authLayout/AuthLayout.styled\";\nimport { LeftBackground } from \"./RegistrationPage.styled\";\n\nconst RegistrationPage = () => {\n    return (\n        <Container>\n            <LeftBackground></LeftBackground>\n            <RightBackground>\n                    <RegistrationForm/>\n            </RightBackground>\n        </Container>\n    )\n}\n\nexport default RegistrationPage;"],"names":["Box","styled","color","space","layout","flexbox","background","border","position","typography","shadow","Button","children","S","type","StyledButton","p","theme","borders","normal","colors","accentColor","radii","button","fontSizes","m","lineHeights","lightBackgroundColor","incomeColor","lightTxtColor","none","StyledNavButton","NavLink","StyledForm","Form","form","FieldWrap","IconWrap","StyledField","Field","borderColor","Svg","EyeButton","Container","backgroundColor","ellipseLeft","ellipseRight","RightBackground","secondaryBackgroundColor","PasswordStrengthMeterWrap","PasswordStrengthMeterProgress","expenseColor","createPasswordLabel","result","score","password","testedResult","zxcvbn","className","value","max","idName","nanoid","idPassword","idEmail","idConfirmPassword","RegistrationForm","dispatch","useDispatch","useState","showPassword","setShowPassword","showConfirm","setShowConfirm","initialValues","email","name","confirm","validationSchema","Yup","required","oneOf","onSubmit","resetForm","signup","values","errors","touched","autoComplete","Logo","label","id","placeholder","href","Sprite","onClick","as","to","Loader","LeftBackground","registerImg"],"sourceRoot":""}