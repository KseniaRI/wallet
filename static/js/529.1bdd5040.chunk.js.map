{"version":3,"file":"static/js/529.1bdd5040.chunk.js","mappings":"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","sources":["components/Box.js","utils/statistics/calculateData.js","components/chart/Chart.styled.js","utils/statistics/doughnutColors.js","components/chart/Chart.jsx","components/table/Table.styled.js","components/table/Table.jsx","components/diagramTab/DiagramTab.styled.js","components/diagramTab/DiagramTab.jsx","redux/transactions/transactions-selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n);","function groupBy(objectArray, property) {\n  return objectArray.reduce((acc, obj) => {\n    const key = obj[property];\n    const curGroup = acc[key] ?? [];\n    return { ...acc, [key]: [...curGroup, obj] };\n  }, {});\n}\n\nexport const calcDataDoughnut = (transactions) => {\n    const allExpenseCategories = transactions.filter(({ type }) => type === false).map(({ category, amount }) => ({ category, amount }));\n    const groupedCategories = groupBy(allExpenseCategories, \"category\");\n    const categories = Object.keys(groupedCategories);\n    const expenses = Object.values(groupedCategories).map(group => group.reduce((acc, el) => acc + el.amount, 0));\n    console.log(categories);\n    console.log(expenses)\n    return { categories, expenses };\n}\n\nexport const sumExpenses = (expenses) => expenses.reduce((acc, el) => acc + el, 0).toFixed(2);\n\nexport const sumIncomes = (transactions) => transactions.filter(transaction => transaction.type === true).reduce((acc, transaction) => acc + transaction.amount, 0).toFixed(2);","import styled from \"@emotion/styled\";\n\nexport const Expenses = styled.span`\n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-70%, -50%);\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: ${p => p.theme.lineHeights.normal};\n`;","export const doughnutColors = [\n        '#FED057',\n        '#FFD8D0',\n        '#FD9498',\n        '#C5BAFF',\n        '#6E78E8',\n        '#4A56E2',\n        '#81E1FF',\n        '#24CCA7'\n      ]","import { Box } from \"components/Box\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip} from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n// import { transactions } from '../../utils/transactions';\nimport { calcDataDoughnut, sumExpenses } from \"utils/statistics/calculateData\";\nimport { Expenses } from \"./Chart.styled\";\nimport { doughnutColors } from '../../utils/statistics/doughnutColors';\nimport { useSelector } from \"react-redux\";\nimport { getTransactions } from \"redux/transactions/transactions-selectors\";\n\nChartJS.register(ArcElement, Tooltip);\n\n\n\n\n// export const data = {\n//   labels: categories,\n//   datasets: [\n//     {\n//       label: 'EUR',\n//       data: expenses,\n//       backgroundColor: doughnutColors,\n//       borderColor: doughnutColors,\n//       borderWidth: 1,\n//     },\n//   ],\n// };\nexport const Chart = () => {\n  const transactionsList = useSelector(getTransactions);\n  const { categories, expenses } = calcDataDoughnut(transactionsList);\n\n  const data = {\n  labels: categories,\n  datasets: [\n    {\n      label: 'EUR',\n      data: expenses,\n      backgroundColor: doughnutColors,\n      borderColor: doughnutColors,\n      borderWidth: 1,\n    },\n  ],\n};\n\n    return (\n        <Box as=\"div\"  pr={30} position=\"relative\" zIndex={1}>\n        <Doughnut data={data}\n          width={320}\n          height={320} />\n          <Expenses>&#8364; {sumExpenses(expenses)}</Expenses>\n        </Box>\n    )\n}","import styled from \"@emotion/styled\";\nimport Datetime from 'react-datetime';\n\nexport const DatetimeStyled = styled(Datetime)`\nwidth: 166px;\nheight: 50px;\n`;\n\nexport const StatTable = styled.div`\nwidth: 350px;\n`;\n\nexport const StatHeader = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\nheight: 58px;\nborder-radius: ${p => p.theme.radii.ellipse};\npadding-left: 30px;\npadding-right: 30px;\n`;\n\nexport const StatBody = styled.div`\ndisplay: flex;\nfont-size: ${p => p.theme.fontSizes.s};\nline-height: ${p => p.theme.lineHeights.small};\npadding-left: 15px;\npadding-right: 30px;\nmargin-bottom: 15px;\n`;\n\nexport const Raw = styled.li`\nborder-bottom: 1px solid #DCDCDF;\nbox-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\nheight: 54px;\npadding-top: 15px;\npadding-bottom: 15px;\n`;\n\nexport const TFoot = styled.div`\nfont-size: ${p => p.theme.fontSizes.s};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-weight: ${p => p.theme.fontWeights.bold};\npadding-left: 15px;\npadding-right: 30px;\n`;","import { Box } from \"components/Box\";\n// import Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n// import { renderStatInput } from \"utils/renderInput/RenderInput\";\nimport { Raw, StatBody, StatHeader, StatTable, TFoot } from \"./Table.styled\";\n// import {transactions} from '../../utils/transactions'\nimport { calcDataDoughnut, sumExpenses, sumIncomes } from \"utils/statistics/calculateData\";\nimport { doughnutColors } from '../../utils/statistics/doughnutColors'\nimport { useSelector } from \"react-redux\";\nimport { getTransactions } from \"redux/transactions/transactions-selectors\";\n\nexport const Table = () => {\n    const transactionsList = useSelector(getTransactions);\n    const { categories, expenses } = calcDataDoughnut(transactionsList);\n    \n    return (\n            <Box as=\"div\" position=\"absolute\" zIndex={1} right={85}>  \n                {/* <Box as=\"div\" display=\"flex\" width={351} justifyContent=\"space-between\" mb={20}>\n                    <Datetime dateFormat=\"MM\" renderInput={renderStatInput} timeFormat={false} initialValue=\"Month\"/>\n                    <Datetime dateFormat=\"YYYY\" renderInput={renderStatInput} timeFormat={false} initialValue=\"Year\"/>\n                </Box> */}\n                <StatTable>\n                    <StatHeader>\n                            <div>Category</div>\n                            <div>Amount</div>\n                    </StatHeader>\n                    <StatBody>\n                        <Box as=\"ul\" width={40}>\n                            {doughnutColors.map(color => \n                                <Raw>\n                                    <Box as=\"div\" display=\"block\" width={24} height={24} borderRadius=\"icon\" backgroundColor={color}  mr={16} fontSize=\"s\" lineHeight=\"small\"/>\n                                </Raw>)}\n                        </Box>\n                        <Box as=\"ul\" width={199} >\n                            {categories.map(category => <Raw>{category}</Raw>)} \n                        </Box>\n                        <Box as=\"ul\" textAlign=\"right\" flexGrow={1}>\n                            {expenses.map(expense => <Raw>{expense.toFixed(2)}</Raw>)} \n                        </Box>   \n                    </StatBody> \n                    <TFoot>\n                        <Box as=\"div\"  display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width={300} m=\"0 auto\">\n                          <span>Expenses:</span>\n                        <span>{sumExpenses(expenses)}</span>\n                        </Box>\n                        <Box as=\"div\" display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width={300} m=\"0 auto\">\n                          <span>Incomes:</span>\n                        <span>{sumIncomes(transactionsList)}</span>\n                        </Box>\n                    </TFoot>\n                </StatTable>\n                \n            </Box>\n        \n    )\n}","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\nfont-family: ${p => p.theme.fonts.title};\nfont-size: ${p => p.theme.fontSizes.l};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-weight: ${p => p.theme.fontWeights.normal};\nmargin-bottom: 20px;\n`;\n\nexport const DiagramTabWrap = styled.div`\npadding: 30px 85px 35px 30px;\n`;","import { Box } from \"components/Box\";\nimport { Chart } from \"components/chart/Chart\";\nimport { Table } from \"components/table/Table\";\nimport { DiagramTabWrap, Title } from \"./DiagramTab.styled\";\n\n\nconst DiagramTab = () => {\n    return (\n        <DiagramTabWrap>\n            <Title>Statistics</Title>\n            <Box as=\"div\" display=\"flex\">\n                <Chart />\n                <Table/>\n            </Box>    \n        </DiagramTabWrap>\n    )\n}\n\nexport default DiagramTab;","export const getTransactions = state => state.transactions.items.transactions;\n// export const getIsLoading = state => state.phonebook.items.isLoading;\n// export const getFilter = state => state.phonebook.filter.value;\n\n// export const getVisibleContacts = state => {\n//   const allContacts = getTransactions(state);\n//   const phonebookFilter = getFilter(state);\n//   return allContacts.filter(contact => {\n//    return contact.name.toLowerCase().includes(phonebookFilter.toLowerCase())\n//   });\n\n//   };"],"names":["Box","styled","color","space","layout","flexbox","background","border","position","typography","shadow","calcDataDoughnut","transactions","property","allExpenseCategories","filter","type","map","category","amount","groupedCategories","reduce","acc","obj","key","curGroup","categories","Object","keys","expenses","values","group","el","console","log","sumExpenses","toFixed","Expenses","p","theme","fontWeights","bold","fontSizes","m","lineHeights","normal","doughnutColors","ChartJS","ArcElement","Tooltip","Chart","transactionsList","useSelector","getTransactions","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","as","pr","zIndex","width","height","StatTable","Datetime","StatHeader","colors","lightBackgroundColor","radii","ellipse","StatBody","s","small","Raw","TFoot","Table","right","display","borderRadius","mr","fontSize","lineHeight","textAlign","flexGrow","expense","alignItems","justifyContent","transaction","Title","fonts","title","l","DiagramTabWrap","state","items"],"sourceRoot":""}