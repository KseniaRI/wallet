{"version":3,"file":"static/js/7.a5606b8d.chunk.js","mappings":"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","sources":["components/Box.js","components/modals/Modals.styled.js","components/header/header.styled.js","components/modals/modalLogout/ModalLogout.jsx","components/header/Header.jsx","components/balance/Balance.styled.js","components/balance/Balance.jsx","components/navigation/Navigation.styled.js","components/navigation/Navigation.jsx","components/sideBar/SideBar.styled.js","components/sideBar/SideBar.jsx","pages/dashboardPage/DashboardPage.styled.js","pages/dashboardPage/DashboardPage.jsx","redux/transactions/transactions-selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n);","import styled from \"@emotion/styled\";\nimport { ErrorMessage, Field, Form } from \"formik\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2);\n  overflow-y: scroll;\n  opacity: 1;\n  z-index: 998;\n`;\n\nexport const ButtonClose = styled.button`\nposition: absolute;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntop: 20px;\nright: 20px;\nwidth: 30px;\nheight: 30px;\nbackground-color: transparent;\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.round};\ntransition:  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover,\n&:focus{\n   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n  0px 2px 1px 0px rgba(0, 0, 0, 0.2);\n}\n`\nexport const Modal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 310px;\nheight: 650px;\npadding-top: 40px;\npadding-right: 63px;\npadding-left: 67px;\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.form};\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\n\n@media screen and (min-width: 768px) {\n    width: 540px;\n    height: 617px;\n    }\n`;\n\nexport const Logout = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 300px;\nheight: 460px;\npadding-top: 80px;\npadding-right: 63px;\npadding-left: 67px;\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.form};\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\n\n@media screen and (min-width: 768px) {\n    width: 440px;\n    height: 440px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 100%;\n`;\n\nexport const ModalTitle = styled.h2`\nfont-size: ${p => p.theme.fontSizes.l};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-family: ${p => p.theme.fonts.title};\nfont-weight: ${p => p.theme.fontWeights.normal};\nmargin-bottom: 40px;\ntext-align:center;\n`;\n\nconst StyledField = styled(Field)`\nborder: ${p => p.theme.borders.none};\nborder-bottom: ${p => p.theme.borders.normal};\nborder-bottom-color: ${p => p.theme.colors.borderColor};\npadding-bottom: 10px;\npadding-left: 15px;\noutline: none;\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-weight: ${p => p.theme.fontWeights.normal};\n`;\n\nexport const CategoryField = styled(StyledField)`\nwidth: 100%;\nmargin-bottom: 40px;\n`;\n\nexport const CommentField = styled(StyledField)`\nwidth: 100%;\n`;\n\nexport const FieldsWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\nmargin-bottom: 40px;\n\n@media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-end;\n    }\n`;\n\nexport const AmountFieldWrap = styled.div`\nposition: relative;\nwidth: 100%;\nmargin-bottom: 40px;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 0;\n}\n`;\n\nexport const ShortField = styled(StyledField)`\npadding-bottom: 10px;\ntext-align: center;\nwidth: 190px;\n`;\n\nexport const Option = styled.option`\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-weight: ${p => p.theme.fontWeights.normal};\nbackground-color: rgba(255, 255, 255, 0.7);\nbox-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\nbackdrop-filter: blur(25px);\nborder-radius: ${p => p.theme.radii.form};\n`;\n\nexport const AmountErrorMessage = styled(ErrorMessage)`\nposition: absolute;\ntop: 100%;\ncolor: red;\n`;\n\nexport const CategoryErrorMessage = styled(ErrorMessage)`\nposition: absolute;\ntop: 50%;\ncolor: red;\n`\n\n","import styled from \"@emotion/styled\";\n\nexport const StyledHeader = styled.header`\n    position: fixed;\n    z-index: 5;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    left: calc((100% - 320px) / 2);\n    background-color: #fff;\n\n    @media screen and (min-width: 768px) {\n      left: calc((100% - 768px) / 2);  \n      padding-top: 20px;\n      padding-bottom: 20px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      left: calc((100% - 1280px) / 2);  \n    }\n\n`;\n\nexport const HeaderContainer = styled.div`\nwidth: 320px;\nmargin: 0 auto;\ndisplay: flex;\njustify-content: space-between;\npadding-left: 20px;\npadding-right: 20px;\n\n@media screen and (min-width: 768px) {\n      width: 768px;\n      padding-left: 40px;\n      padding-right: 40px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1280px;\n      padding-left: 85px;\n      padding-right: 85px;\n    }\n`;\n\nexport const Svg = styled.svg`\nwidth: 18px;\nheight: 18px;\n\n@media screen and (min-width: 768px) {\nmargin-right: 20px;\n}\n`;\n\n\nexport const ButtonLogout = styled.button`\ndisplay: inline-flex;\nalign-items: center;\ncolor: inherit;\nfont-family: inherit;\nfont-size: inherit;\nline-height: inherit;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.button};\ntransition:  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1); \n\n    &:hover,\n    &:focus {\n     box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.12), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n      0px 2px 1px 0px rgba(0, 0, 0, 0.2);\n    } \n`;","import { Button } from \"components/buttons/button/Button\"\nimport { useEffect} from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"react-datetime/css/react-datetime.css\";\nimport 'moment/locale/it';\nimport { Backdrop, Logout} from \"../Modals.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { Box } from \"components/Box\";\nimport { ButtonClose, ModalTitle } from \"components/modals/Modals.styled\";\nimport { TfiClose } from 'react-icons/tfi'\nimport { logout } from \"redux/auth/auth-operations\";\n\nconst modalLogoutRoot = document.querySelector('#modal-logout-root');\n\nconst LogoutModal = ({ onClose }) => {\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        const handleKeyDown = (evt) => {\n            if (evt.code === 'Escape') {\n              onClose();\n            }\n        }   \n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [onClose])\n  \n    const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n    };\n    \n    return createPortal(\n        <Backdrop onClick={handleBackdropClick}>\n            <Logout>\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                    <ButtonClose type=\"button\" onClick={onClose}><TfiClose/></ButtonClose>\n                    <ModalTitle>Are you sure you want to exit?</ModalTitle>\n                    <Button type=\"button\" onClick={() => {\n                        onClose();\n                        dispatch(logout());\n                    }}>\n                        Exit\n                    </Button>\n                    <Button type=\"button\" onClick={onClose}>\n                        Cancel\n                    </Button>\n                </Box> \n            </Logout>        \n        </Backdrop>,\n        modalLogoutRoot)\n}\n\nexport default LogoutModal;","import { Box } from \"components/Box\";\nimport { ButtonLogout, HeaderContainer, StyledHeader, Svg } from \"./header.styled\";\nimport Sprite from '../../images/icons/symbol-defs.svg';\nimport { Logo } from \"components/logo/Logo\";\nimport { useSelector } from \"react-redux\";\nimport { getAvatarURL, getUserName } from \"redux/auth/auth-selectors\";\nimport { Loader } from \"components/loader/Loader\";\nimport ModalLogout from \"components/modals/modalLogout/ModalLogout\";\nimport { useState } from \"react\";\nimport Media from 'react-media';\n\nexport const Header = () => {\n    const userName = useSelector(getUserName);\n    const avatarURL = useSelector(getAvatarURL);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const toggleModal = () => {\n        setIsModalOpen(state => !state);\n    };\n\n    return (\n        <StyledHeader>\n            <HeaderContainer>\n                <Logo/>\n                <Box as=\"div\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    color=\"secondaryTxtColor\"\n                    fontSize=\"m\"\n                    lineHeight=\"normal\"\n                >\n                    <Box as=\"div\" width={20} height={20} borderRadius=\"round\" \n                    backgroundImage={`url(${avatarURL})`} \n                    backgroundSize=\"contain\"\n                    backgroundPosition=\"center\"\n                    backgroundRepeat=\"no-repeat\"\n                    mr={10}\n                    />\n                    <span>{userName}</span>\n                    <Box as=\"div\" width=\"1px\" height=\"30px\" mr={15} ml={15} backgroundColor=\"secondaryTxtColor\"/>\n                    <ButtonLogout type=\"button\" onClick={toggleModal}>\n                        <Svg>\n                            <use href={`${Sprite}#icon-logout`}></use>\n                        </Svg>\n                        <Media query=\"(min-width: 768px)\" render={() => <span>Logout</span>}/>\n                        <Loader />\n                    </ButtonLogout>\n                </Box>\n            </HeaderContainer>\n            {isModalOpen && (<ModalLogout onClose={toggleModal} />)}\n        </StyledHeader>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const BalanceView = styled.div`\nposition: relative;\nz-index:3;\nborder-radius: ${p => p.theme.radii.ellipse};\nborder-color: ${p => p.theme.colors.mainTextColor};\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\nwidth: 100%;\npadding-top: 8px;\npadding-bottom: 13px;\npadding-left: 40px;\n\n    @media screen and (min-width: 768px) {\n    width: 334px;  \n    }\n\n    @media screen and (min-width: 1280px) {\n    width: 350px;  \n    }\n`;\n\nexport const BalanceTitle = styled.h3`\nmargin-bottom: 10px;\nfont-size: ${p => p.theme.fontSizes.s};\nline-height: ${p => p.theme.lineHeights.normal};\ntext-transform: uppercase;\ncolor: ${p => p.theme.colors.secondaryTxtColor};\n`;\n\nexport const BalanceAmount = styled.p`\nfont-family: ${p => p.theme.fonts.title};\nfont-size: ${p => p.theme.fontSizes.l};\nline-height: ${p => p.theme.lineHeights.normal};\nfont-weight: ${p => p.theme.fontWeights.bold};\n`\n","import { useSelector } from \"react-redux\"\nimport { getTransactions } from \"redux/transactions/transactions-selectors\";\nimport { BalanceAmount, BalanceTitle, BalanceView } from \"./Balance.styled\"\nimport { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { fetchCurrentUser } from \"redux/auth/auth-operations\"\n\nexport const Balance = () => {\n      const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n    const transactionsList = useSelector(getTransactions);\n    let balance;\n    transactionsList.length > 0 ? balance = transactionsList[0].balance : balance = 0;\n    return (\n        <BalanceView>\n            <BalanceTitle>Your Balance</BalanceTitle>\n            <BalanceAmount>&#8364; {balance}</BalanceAmount>\n        </BalanceView>\n    )\n}","import styled from \"@emotion/styled/macro\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledNavLink = styled(NavLink)`\n    &.active{\n        font-weight: ${p => p.theme.fontWeights.bold};\n    }\n`;\n\nexport const NavList = styled.ul`\n    @media screen and (max-width: 767px) { \n    display: flex;\n    justify-content: center;\n    }\n`;\n\nexport const NavItem = styled.li`\n    font-family: ${p => p.theme.fonts.title};\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: ${p => p.theme.lineHeights.normal};\n    color: ${p => p.theme.colors.mainTxtColor};\n    margin-bottom: 10px;\n    transition:  font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1); \n    \n    &:hover,\n    &:focus {\n        font-weight: ${p => p.theme.fontWeights.bold};\n    }\n`;\n\nexport const Svg = styled.svg`\nmargin-right: 23px;\nwidth: 18px;\nheight: 18px;\ncolor: ${p => p.theme.colors.iconColor}; \nfill: currentColor;\ntransition:  fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    ${StyledNavLink}.active &{\n     fill: ${p => p.theme.colors.accentColor};\n     filter: drop-shadow(0px 3px 10px rgba(74, 86, 226, 0.5));\n    }\n\n    ${NavItem}:hover &,\n    ${NavItem}:focus & {\n     fill: ${p => p.theme.colors.accentColor};\n     filter: drop-shadow(0px 3px 10px rgba(74, 86, 226, 0.5));\n    }\n`;\n\n","import { NavItem, NavList, StyledNavLink, Svg } from \"./Navigation.styled\";\nimport Sprite from '../../images/icons/symbol-defs.svg';\nimport Media from 'react-media';\n\nexport const Navigation = () => {\n    return (\n        <NavList>\n            <NavItem>\n                <StyledNavLink to='/dashboard/home'>\n                    <Svg>\n                        <use href={`${Sprite}#icon-home`}></use>\n                    </Svg>\n                    <Media query=\"(min-width: 768px)\" render={() => <span>Home</span>} />  \n                </StyledNavLink>\n            </NavItem>\n            <NavItem>\n                <StyledNavLink to='/dashboard/diagram'>\n                    <Svg>\n                         <use href={`${Sprite}#icon-stat`}></use>\n                    </Svg>\n                    <Media query=\"(min-width: 768px)\" render={() => <span>Statistics</span>} />\n                </StyledNavLink>\n            </NavItem>\n            <NavItem>\n                <Media query=\"(max-width: 767px)\" render={() => (\n                <StyledNavLink to='/dashboard/currency'>\n                    <Svg>\n                         <use href={`${Sprite}#icon-currency`}></use>\n                    </Svg>\n                </StyledNavLink>)\n                } />\n            </NavItem>\n        </NavList>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const StyledSideBar = styled.div`\nwidth: 100%;\npadding-top: 10px;\nmargin-bottom: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: flex;  \n    justify-content: space-between;  \n    padding-top: 20px;\n    margin-bottom: 40px;\n    }\n\n    @media screen and (min-width: 1280px) { \n    width: 380px;\n    padding-top: 40px;\n    padding-bottom: 49px;\n    padding-right: 30px;\n    margin-bottom: 0;\n    }\n`;\n\nexport const NavBalanceWrap = styled.div`\n\n@media screen and (min-width: 1280px) {\nmargin-bottom: 30px;\n}\n`;","import { Balance } from \"components/balance/Balance\";\nimport { Currency } from \"components/currency/Currency\";\nimport { Navigation } from \"components/navigation/Navigation\";\nimport Media from 'react-media';\nimport { NavBalanceWrap, StyledSideBar } from \"./SideBar.styled\";\n\nexport const SideBar = () => {\n    return (\n        <StyledSideBar>\n            <NavBalanceWrap>\n                <Navigation />\n                <Balance />\n            </NavBalanceWrap>\n            <Media query=\"(min-width: 768px)\" render={() => <Currency />} />\n        </StyledSideBar>\n    )\n}","import styled from \"@emotion/styled\";\nimport ellipseLeft from '../../images/ellipse-left.png';\nimport ellipseRight from '../../images/ellipse-right.png'\n\nexport const Section = styled.section`\npadding-top: 60px;\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n`;\n\nexport const DashboardContainer = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\nflex-direction: column;\nwidth: 100%;\nheight: 1313px;\nmargin: 0 auto;\npadding-left: 20px;\npadding-right: 20px;\nbackground-color: ${p => p.theme.colors.backgroundColor};\noverflow: hidden;\n@media screen and (min-width: 320px) {\n   width: 320px; \n } \n @media screen and (min-width: 768px) {\n   width: 768px; \n   height: 1024px;\n   padding-left: 40px;\n   padding-right: 40px;\n   &::before {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseLeft});\n    background-repeat: no-repeat;\n    background-position: bottom left;\n    bottom: 0;\n    left: 0;\n    width: 618px;\n    height: 547px;\n    filter: blur(15px);\n    opacity: 0.6;\n    }\n    &::after {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseRight});\n    background-repeat: no-repeat;\n    background-position: top right;\n    width: 618px;\n    height: 547px;\n    right: 0;\n    top: 0;\n    filter: blur(15px);\n    opacity: 0.6;\n    }\n }\n @media screen and (min-width: 1280px) {\n   flex-direction: row; \n   width: 1280px; \n   height: 1020px;\n   padding-left: 85px;\n   padding-right: 85px;\n } \n`;","import { Suspense, useEffect } from \"react\"\nimport { Outlet } from \"react-router-dom\"\nimport { Header } from \"components/header/Header\"\nimport { SideBar } from \"components/sideBar/SideBar\"\nimport { DashboardContainer, Section } from \"./DashboardPage.styled\"\nimport { Box } from \"components/Box\"\nimport { useDispatch } from \"react-redux\"\nimport { fetchCurrentUser } from \"redux/auth/auth-operations\"\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from \"components/loader/Loader\";\nimport Media from 'react-media';\n\nconst DashboardPage = () => {\n    const dispatch = useDispatch();\n    \n     useEffect(() => {\n        dispatch(fetchCurrentUser());\n     }, [dispatch]);\n    \n    return (\n        <>\n            <Header />\n            <main>\n                <Section>\n                    <DashboardContainer>\n                        <SideBar />\n                        <Media query=\"(min-width: 1280px)\" \n                        render={() =>\n                        <Box as=\"div\"\n                            width=\"1px\"\n                            height=\"640px\"\n                            borderRight=\"1px solid #E7E5F2\"\n                            boxShadow=\"-1px 0px 0px rgba(0, 0, 0, 0.05), 1px 0px 0px rgba(255, 255, 255, 0.6)\" />}\n                        />\n                        <Suspense fallback={<Loader />}>\n                            <Outlet />\n                        </Suspense>\n                    </DashboardContainer>\n                </Section>    \n            </main>\n            <ToastContainer autoClose={2000} />\n        </> \n    )\n}\n\nexport default DashboardPage;","export const getTransactions = state => state.transactions.items.transactions;\nexport const getIsLoading = state => state.transactions.items.isLoading;\nexport const getMonth = state => state.transactions.filter.month;\nexport const getYear = state => state.transactions.filter.year;\n\nexport const getVisibleTransactions = state => {\n   const allTransactions = getTransactions(state);\n   const month = getMonth(state);\n   const year = getYear(state)\n  \n   return allTransactions.filter(transaction =>\n    transaction.date.slice(3, 5) === month && transaction.date.slice(6) === year\n    ) \n  };"],"names":["Box","styled","color","space","layout","flexbox","background","border","position","typography","shadow","Backdrop","ButtonClose","p","theme","borders","none","radii","round","Modal","form","colors","lightBackgroundColor","Logout","StyledForm","Form","ModalTitle","fontSizes","l","lineHeights","normal","fonts","title","fontWeights","StyledField","Field","borderColor","m","CategoryField","CommentField","FieldsWrap","AmountFieldWrap","ShortField","Option","AmountErrorMessage","ErrorMessage","CategoryErrorMessage","StyledHeader","HeaderContainer","Svg","ButtonLogout","button","modalLogoutRoot","document","querySelector","onClose","dispatch","useDispatch","useEffect","handleKeyDown","evt","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","display","flexDirection","alignItems","justifyContent","type","Button","logout","Header","userName","useSelector","getUserName","avatarURL","getAvatarURL","useState","isModalOpen","setIsModalOpen","toggleModal","state","Logo","as","fontSize","lineHeight","width","height","borderRadius","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","mr","ml","backgroundColor","href","Sprite","query","render","Loader","ModalLogout","BalanceView","ellipse","mainTextColor","BalanceTitle","s","secondaryTxtColor","BalanceAmount","bold","Balance","fetchCurrentUser","balance","transactionsList","getTransactions","length","StyledNavLink","NavLink","NavList","NavItem","mainTxtColor","iconColor","accentColor","Navigation","to","StyledSideBar","NavBalanceWrap","SideBar","Currency","Section","DashboardContainer","ellipseLeft","ellipseRight","borderRight","boxShadow","Suspense","fallback","autoClose","transactions","items","getVisibleTransactions","allTransactions","month","filter","getMonth","year","getYear","transaction","date","slice"],"sourceRoot":""}