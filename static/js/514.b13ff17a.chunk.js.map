{"version":3,"file":"static/js/514.b13ff17a.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/button/Button.jsx","components/registrationForm/RegistrationForm.styled.js","pages/authLayout/AuthLayout.styled.js","components/registrationForm/RegistrationForm.jsx","pages/registrationPage/RegistrationPage.styled.js","pages/registrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledButton = styled.button`\nwidth: 300px;\nheight: 50px;\nborder: ${p => p.theme.borders.normal}; \nborder-color: ${p => p.theme.colors.accentColor};\nborder-radius: ${p => p.theme.radii.button};\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\ntext-transform: uppercase;\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\ncolor: ${p => p.theme.colors.accentColor};\n\ntransition:  all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n    margin-bottom: 20px;\n\n\n&:hover,\n&:focus{\n   background-color: ${p => p.theme.colors.incomeColor};\n   color: ${p => p.theme.colors.lightTxtColor}; \n   border: ${p => p.theme.borders.none}; \n}\n`;","import { StyledButton } from \"./Button.styled\"\n\nexport const Button = ({children}) => {\n    return (\n        <StyledButton type=\"submit\">{children}</StyledButton>\n    )\n}","import styled from \"@emotion/styled\";\nimport { Field, Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntop: 50%;\nleft: 50%;\npadding: 40px 65px 60px 65.5px;\ntransform: translate(-50%, -50%);\nz-index: 1;\nwidth: 540px;\n/* height: 616px; */\nbackground-color: ${p => p.theme.colors.lightBackgroundColor};\nborder-radius: ${p => p.theme.radii.form};\n`;\n\nexport const FieldWrap = styled.div`\nposition: relative;\nwidth: 100%;\nmargin-bottom: 40px;\n\n&:last-of-type{\n    margin-bottom: 50px;\n}\n&:first-of-type{\n    margin-top: 50px;\n}\n`;\n\nexport const IconWrap = styled.span`\nposition: absolute;\nwidth: 24px;\nheight: 24px;\nleft: 8px;\nbottom: 10px;\n/* top: 50%;\ntransform: translateY(-50%) */\n`;\n\nexport const StyledField = styled(Field)`\nwidth: 100%;\nheight: 34px;\npadding-left: 52px;\npadding-bottom: 10px;\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.lineHeights.normal};\n\nborder: ${p => p.theme.borders.none};\nborder-bottom: 1px solid ${p => p.theme.colors.borderColor};\n`;\n\nexport const Svg = styled.svg`\nwidth: 24px;\nheight: 24px;\nmargin-right: 20px;\n`;","import styled from \"@emotion/styled\";\nimport ellipseLeft from '../../images/ellipse-left.png';\nimport ellipseRight from '../../images/ellipse-right.png';\n\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    margin: 0 auto;\n    width: 1280px;\n    height: 720px;\n    overflow: hidden;\n    background-color: ${p => p.theme.colors.backgroundColor};\n\n    &::before {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseLeft});\n    background-repeat: no-repeat;\n    background-position: bottom left;\n    bottom: 0;\n    left: 0;\n    width: 618px;\n    height: 547px;\n    }\n\n    &::after {\n    content: \"\";\n    position: absolute;\n    background-image: url(${ellipseRight});\n    background-repeat: no-repeat;\n    background-position: top right;\n    width: 618px;\n    height: 547px;\n    right: 0;\n    top: 0;\n    filter: blur(15px);\n    opacity: 0.6;\n    }\n`;\n\nexport const RightBackground = styled.div`\n    position: relative;\n    width: 720px;\n    height: 720px;\n    background-color: ${p => p.theme.colors.secondaryBackgroundColor};\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Logo } from 'components/logo/Logo';\nimport { FieldWrap, IconWrap, StyledField, StyledForm, Svg } from './RegistrationForm.styled';\nimport { Button } from 'components/button/Button';\nimport Sprite from '../../images/icons/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nconst idName = nanoid();\nconst idPassword = nanoid();\nconst idEmail = nanoid();\nconst idConfirmPassword = nanoid();\n\nexport const RegistrationForm = () => {\n    const dispatch = useDispatch();\n    return (\n       <Formik\n          initialValues={{ email: '', password: '', name: '' }}\n         validationSchema={Yup.object({\n              name: Yup.string().required('Required'),\n              email: Yup.string().email('must be a valid email').required('Required'),\n              password: Yup.string().required('Required'),\n            })\n            }\n            onSubmit={({ name, email, password }, { resetForm }) => {\n              dispatch(register({ name, email, password }));\n              resetForm();\n            }}\n        >\n            <StyledForm autoComplete=\"off\" >\n                <Logo />\n                <FieldWrap>\n                    <StyledField label=\"Email\" name=\"email\" type=\"email\" id={idEmail} placeholder=\"E-mail\"/>\n                    <IconWrap><Svg><use href={`${Sprite}#icon-email`}></use></Svg></IconWrap>\n                </FieldWrap>\n                <FieldWrap>\n                    <StyledField label=\"Password\" name=\"password\" type=\"text\" id={idPassword} placeholder=\"Password\" />\n                    <IconWrap><Svg><use href={`${Sprite}#icon-lock`}></use></Svg></IconWrap>\n                </FieldWrap>    \n                <FieldWrap>\n                    <StyledField label=\"Password\" name=\"password\" type=\"text\" id={idConfirmPassword} placeholder=\"Confirm password\" />\n                    <IconWrap><Svg><use href={`${Sprite}#icon-lock`}></use></Svg></IconWrap>\n                </FieldWrap>   \n                <FieldWrap>\n                    <StyledField label=\"Name\" name=\"name\" type=\"text\" id={idName} placeholder=\"Your name\" />\n                    <IconWrap><Svg><use href={`${Sprite}#icon-user`}></use></Svg></IconWrap>\n                </FieldWrap>   \n                <Button type=\"submit\">\n                    {/* <StyledClipLoader loading={isLoading} size={10} /> */}\n                    Regidtration\n                </Button>\n                <Button type=\"submit\">\n                    {/* <StyledClipLoader loading={isLoading} size={10} /> */}\n                    Enter\n                </Button>\n            </StyledForm> \n        </Formik>\n    )\n}","import styled from \"@emotion/styled\";\nimport registerImg from '../../images/register.png'\n\nexport const LeftBackground = styled.div`\n    position: relative;\n    width: 560px;\n    height: 720px;\n   \n    &::after{\n        content: \"\";\n        position: absolute;\n        background-image: url(${registerImg});\n        background-repeat: no-repeat;\n        background-position: center;\n        width: 410px;\n        height: 413px;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%)\n    }\n`;\n\n","import { RegistrationForm } from \"components/registrationForm/RegistrationForm\";\nimport { Container, RightBackground } from \"pages/authLayout/AuthLayout.styled\";\nimport { LeftBackground } from \"./RegistrationPage.styled\";\n\n\nconst RegistrationPage = () => {\n    return (\n        <Container>\n            <LeftBackground></LeftBackground>\n            <RightBackground>\n                    <RegistrationForm/>\n            </RightBackground>\n        </Container>\n    )\n}\n\nexport default RegistrationPage;"],"names":["StyledButton","styled","p","theme","borders","normal","colors","accentColor","radii","button","fontSizes","m","lineHeights","lightBackgroundColor","incomeColor","lightTxtColor","none","Button","children","type","StyledForm","Form","form","FieldWrap","IconWrap","StyledField","Field","borderColor","Svg","Container","backgroundColor","ellipseLeft","ellipseRight","RightBackground","secondaryBackgroundColor","idName","nanoid","idPassword","idEmail","idConfirmPassword","RegistrationForm","dispatch","useDispatch","initialValues","email","password","name","validationSchema","Yup","required","onSubmit","resetForm","register","autoComplete","Logo","label","id","placeholder","href","Sprite","LeftBackground","registerImg"],"sourceRoot":""}